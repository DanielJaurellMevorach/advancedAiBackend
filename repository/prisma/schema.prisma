generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  username  String      @unique
  firstName String
  lastName  String
  email     String      @unique
  password  String
  chats     Chat[]      @relation("UserChats")
  VoiceChat VoiceChat[] @relation("UserVoiceChats")
  createdAt DateTime    @default(now())
}

model Chat {
  id        Int       @id @default(autoincrement())
  name      String    @default("Chat")
  user      User?     @relation("UserChats", fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?
  messages  Message[] @relation("ChatMessages")
  createdAt DateTime  @default(now())
}

model Message {
  id        Int      @id @default(autoincrement())
  prompt    String
  content   String
  chat      Chat?    @relation("ChatMessages", fields: [chatId], references: [id], onDelete: Cascade)
  chatId    Int?
  createdAt DateTime @default(now())
}

model VoiceChat {
  id        Int            @id @default(autoincrement())
  name      String         @default("VoiceChat")
  user      User?          @relation("UserVoiceChats", fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?
  messages  VoiceMessage[] @relation("VoiceChatMessages")
  createdAt DateTime       @default(now())
}

model VoiceMessage {
  id         Int          @id @default(autoincrement())
  prompt     String
  content    String
  chat       VoiceChat?   @relation("VoiceChatMessages", fields: [chatId], references: [id], onDelete: Cascade)
  chatId     Int?
  correction Correction[] @relation("VoiceMessageCorrection")
  createdAt  DateTime     @default(now())
}

model Correction {
  id             Int          @id @default(autoincrement())
  description    String
  isCorrectSentence     Boolean
  correctionOfEntireSentence    String
  mistakes       Mistake[]    @relation("VoiceMessageCorrectionMistakes")
  voiceMessage   VoiceMessage @relation("VoiceMessageCorrection", fields: [voiceMessageId], references: [id], onDelete: Cascade)
  voiceMessageId Int
  createdAt      DateTime     @default(now())
}

model Mistake {
  id              Int        @id @default(autoincrement())
  problematicWord String
  explanation     String
  correction      Correction @relation("VoiceMessageCorrectionMistakes", fields: [correctionId], references: [id], onDelete: Cascade)
  correctionId    Int
  brokeSubject    Boolean
  createdAt       DateTime   @default(now())
}
